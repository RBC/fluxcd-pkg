name: integration-aws

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"
  # push:
  #   branches:
  #     - main

permissions:
  contents: read
  id-token: write # Required for obtaining AWS OIDC federated credential.

jobs:
  oci-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        auth-mode:
        - node-identity
        - workload-identity
      fail-fast: false
    defaults:
      run:
        working-directory: ./tests/integration
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 1.25.x
          cache-dependency-path: tests/integration/go.sum
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OCI_E2E_AWS_ASSUME_ROLE_NAME }}
          role-session-name: OCI_GH_Actions
          aws-region: us-east-1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.11.1
      - name: Set dynamic variables in .env
        run: |
          cat > .env <<EOF
          export TF_VAR_rand=${RANDOM}
          export TF_VAR_tags='{"environment"="github", "ci"="true", "repo"="pkg", "createdat"="$(date -u +x%Y-%m-%d_%Hh%Mm%Ss)"}'
          EOF
      - name: Print .env for dynamic tag value reference
        run: cat .env
      - name: Build test app
        run: make docker-build
      - name: Run tests
        run: . .env && make test-aws
        env:
          AWS_REGION: us-east-1
          TF_VAR_cross_region: us-east-2
          TF_VAR_enable_wi: ${{ (matrix.auth-mode == 'workload-identity' && 'true') || 'false' }}
      - name: Ensure resource cleanup
        if: ${{ always() }}
        run: . .env && make destroy-aws
        env:
          AWS_REGION: us-east-1
          TF_VAR_cross_region: us-east-2
          TF_VAR_enable_wi: ${{ (matrix.auth-mode == 'workload-identity' && 'true') || 'false' }}
